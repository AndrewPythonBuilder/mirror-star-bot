import logging
import constants, base_w, texts
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, Contact, KeyboardButton, ChatMember, ChatAction, InlineQueryResultArticle, InputTextMessageContent, ParseMode
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters, InlineQueryHandler

import datetime


add = delete_a = robber_t = disc = ph = telegr = discr = mosh = call_c = money = mailing = upgr = False


logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
updater = Updater(token=constants.token)
dispatcher = updater.dispatcher

job_queue = updater.job_queue


def start(bot,update):
    message = update.message
    global add, delete_a, robber_t, disc, ph, telegr, discr , mosh , call_c , money,mailing
    if message.chat.id in constants.admins:
        base_w.delete_none_users()
        add = delete_a = robber_t = disc = ph = telegr = mailing = False
        buttons = [['–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞','–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã'],['–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞','–†–∞—Å—Å—ã–ª–∫–∞']]
        keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –∫–æ–≥–æ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —Ä–∞–∑–æ–±–ª–∞—á–∏–º?', reply_markup=keyboard)
    elif message.chat.id in base_w.ids_admins():
        buttons = [['–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞']]
        add = delete_a = robber_t = disc = ph = telegr = False
        base_w.delete_none_users()
        keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=keyboard)
    else:
        base_w.new_user(message.chat.id)
        base_w.statistics_plus(message.chat.id)
        discr = mosh = money = call_c = False
        buttons = [['–ü–æ–∏—Å–∫ –º–æ—à–µ–Ω–Ω–∏–∫–∞üîç','–°–ø–∏—Å–æ–∫ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤üïµ‚Äç‚ôÇüïµ‚Äç‚ôÇüïµ‚Äç‚ôÇ'],['–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞üïµ‚Äç‚ôÇ','–ó–∞–∫–∞–∑–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥üí≤'],['–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏üìû']]
        keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        bot.send_message(message.chat.id, texts.hello_t, reply_markup=keyboard)
        print(message.chat.id)

def answer_questions(bot, update):
    message = update.message
    if (message.chat.id in constants.admins) or (base_w.is_pro_admin(message.chat.id) == 'on'):
        #----------------------------------admins--------------------------------
        global add, delete_a, robber_t,disc, ph, telegr, mailing, upgr
        if message.text == '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã':
            buttons = [['–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞','–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤','–£–¥–∞–ª–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'],['Upgrade –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞‚úÖ'],['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=keyboard)

        elif message.text == '–î–æ–º–æ–π' or message.text == '–û—Ç–º–µ–Ω–∞':
            add = delete_a = robber_t =disc = ph = telegr =mailing = upgr = False
            base_w.delete_none_users()
            buttons = [['–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞', '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã'], ['–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–†–∞—Å—Å—ã–ª–∫–∞']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –∫–æ–≥–æ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —Ä–∞–∑–æ–±–ª–∞—á–∏–º?', reply_markup=keyboard)

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞':
            buttons = [['–û—Ç–º–µ–Ω–∞']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ—à–ª–∏—Ç–µ –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º', reply_markup=keyboard)
            add = True

        elif add == True:
            add  = False
            try:
                id_ = message.forward_from.id
                username = message.forward_from.username
                first_name = message.forward_from.first_name
                base_w.init_admin(id_,username,first_name)
                buttons = [['–î–æ–º–æ–π']]
                keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä', reply_markup=keyboard)
            except:
                bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö')
                message.text = '–î–æ–º–æ–π'
                answer_questions(bot, update)

        elif message.text == '–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤':
            list_of_admins = base_w.all_admins()
            str_list = ''
            for i in list_of_admins:
                str_list += i + '\n'
            bot.send_message(message.chat.id, str_list)

        elif message.text == '–£–¥–∞–ª–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞':
            list_of_admins = base_w.all_admins()
            buttons = []
            for i in list_of_admins:
                button = [i]
                buttons.append(button)
            buttons.append(['–î–æ–º–æ–π'])
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å', reply_markup=keyboard)
            delete_a = True

        elif delete_a == True:
            delete_a =False
            a = message.text.split('  ')
            try:
                base_w.delete_admin(a[0], a[1])
                bot.send_message(message.chat.id, '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω')
                message.text = '–î–æ–º–æ–π'
                answer_questions(bot, update)
            except:
                pass

        #--------------------------------------ROBBER-----------------------
        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞':
            buttons = [['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏–∫–∞ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º', reply_markup=keyboard)
            robber_t = True

        elif robber_t == True:
            robber_t = False
            try:
                id_ = message.forward_from.id
                username = message.forward_from.username
                base_w.add_robber_id(id_, username)
                base_w.save_nikcname(message.forward_from.first_name)
                bot.send_message(message.chat.id, 'id –º–æ—à–µ–Ω–Ω–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ\n–ü—Ä–∏—à–ª–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ(–±–µ–∑ —Ñ–æ—Ç–æ)')
                disc = True
            except:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö')
                message.text = '–î–æ–º–æ–π'
                answer_questions(bot, update)

        elif disc == True:
            disc = False
            base_w.save_discription(message.text)
            buttons = [['–î–∞–ª–µ–µ'],['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n–ï—Å–ª–∏ –∏—Ö –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–¥–∞–ª–µ–µ"',
                             reply_markup=keyboard)
            ph = True

        elif ph == True:
            ph = False
            if message.text != '–î–∞–ª–µ–µ':
                try:
                    l = ''
                    for i in range(len(message.photo)):
                        l += message.photo[i].file_id + '@#$%$#@'
                    base_w.save_photo(l)
                    buttons = [['–í—Å–µ'],['–î–æ–º–æ–π']]
                    keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                    bot.send_message(message.chat.id,
                                     '–í–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, —Å–∫–∏–Ω—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ telegraph –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–≤—Å–µ"',
                                     reply_markup=keyboard)
                    telegr = True
                except:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö')
                    message.text = '–î–æ–º–æ–π'
                    answer_questions(bot, update)
            else:
                buttons = [['–í—Å–µ'], ['–î–æ–º–æ–π']]
                keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                bot.send_message(message.chat.id,
                                 'C–∫–∏–Ω—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ telegraph –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–≤—Å–µ"',
                                 reply_markup=keyboard)
                telegr = True

        elif telegr == True:
            telegr = False
            if message.text != '–í—Å–µ':
                base_w.save_telegr(message.text)
            else:
                message.text = '–°—Ç–∞—Ç—å–∏ –Ω–µ—Ç'
                base_w.save_telegr(message.text)
            buttons = [['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id,
                             '–í—Å–µ, –≥–æ—Ç–æ–≤–æ, –º–æ—à–µ–Ω–Ω–∏–∫ –ø–æ–π–º–∞–Ω!\n–ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–π—Ç–∏ –¥–æ–º–æ–π!)',
                             reply_markup=keyboard)

        #------------------------------------statistics-----------------------------------
        elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
            bot.send_message(message.chat.id, texts.statistics %(len(base_w.statistics_registred()), base_w.statistics_daily()))

        #------------------------------------mailing--------------------------------------
        elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞':
            buttons = [['–û—Ç–º–µ–Ω–∞']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–°–ª–µ–¥—É—é—â–µ–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑–æ—à–ª–µ—Ç—Å—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞, –∫—Ä–æ–º–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤\n–ù–∞–∂–º–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥',
                             reply_markup=keyboard)
            mailing = True

        elif mailing == True:
            mailing = False
            for i in base_w.statistics_registred():
                try:
                    bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False,
                                        message_id=message.message_id)
                except:
                    pass

        elif message.text == 'Upgrade –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞‚úÖ':
            list_of_admins = base_w.all_admins()
            buttons = []
            for i in list_of_admins:
                button = [i]
                buttons.append(button)
            buttons.append(['–î–æ–º–æ–π'])
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ–±—Ä–∞–¥–æ–≤–∞—Ç—å, –æ–Ω —Å–∫–æ—Ä–æ —Å—Ç–∞–Ω–µ—Ç.. –∞–¥–º–∏–Ω–æ–º!', reply_markup=keyboard)
            upgr = True

        elif upgr == True:
            upgr = False
            a = message.text.split('  ')
            try:
                base_w.upgrade_admin(a[0], a[1])
                bot.send_message(message.chat.id, '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω')
                message.text = '–î–æ–º–æ–π'
                answer_questions(bot, update)
            except:
                pass


    #------------------------------------------moderators---------
    elif (message.chat.id in base_w.ids_admins()) and (base_w.is_pro_admin(message.chat.id) == 'off'):
        if message.text == '–î–æ–º–æ–π' or message.text == '–û—Ç–º–µ–Ω–∞':
            add = delete_a = robber_t = disc = ph = telegr = False
            base_w.delete_none_users()
            buttons = [['–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –∫–æ–≥–æ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —Ä–∞–∑–æ–±–ª–∞—á–∏–º?', reply_markup=keyboard)


        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞':
            buttons = [['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏–∫–∞ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º', reply_markup=keyboard)
            robber_t = True

        elif robber_t == True:
            robber_t = False
            try:
                id_ = message.forward_from.id
                username = message.forward_from.username
                base_w.add_robber_id(id_, username)
                base_w.save_nikcname(message.forward_from.first_name)
                bot.send_message(message.chat.id, 'id –º–æ—à–µ–Ω–Ω–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ\n–ü—Ä–∏—à–ª–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ(–±–µ–∑ —Ñ–æ—Ç–æ)')
                disc = True
            except:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö')
                message.text = '–î–æ–º–æ–π'
                answer_questions(bot, update)

        elif disc == True:
            disc = False
            base_w.save_discription(message.text)
            buttons = [['–î–∞–ª–µ–µ'],['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n–ï—Å–ª–∏ –∏—Ö –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–¥–∞–ª–µ–µ"',
                             reply_markup=keyboard)
            ph = True

        elif ph == True:
            ph = False
            if message.text != '–î–∞–ª–µ–µ':
                try:
                    l = ''
                    for i in range(len(message.photo)):
                        l += message.photo[i].file_id + '@#$%$#@'
                    base_w.save_photo(l)
                    buttons = [['–í—Å–µ'],['–î–æ–º–æ–π']]
                    keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                    bot.send_message(message.chat.id,
                                     '–í–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, —Å–∫–∏–Ω—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ telegraph –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–≤—Å–µ"',
                                     reply_markup=keyboard)
                    telegr = True
                except:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö')
                    message.text = '–î–æ–º–æ–π'
                    answer_questions(bot, update)
            else:
                buttons = [['–í—Å–µ'], ['–î–æ–º–æ–π']]
                keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                bot.send_message(message.chat.id,
                                 'C–∫–∏–Ω—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ telegraph –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–≤—Å–µ"',
                                 reply_markup=keyboard)
                telegr = True

        elif telegr == True:
            telegr = False
            if message.text != '–í—Å–µ':
                base_w.save_telegr(message.text)
            else:
                message.text = 'None'
                base_w.save_telegr(message.text)
            buttons = [['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id,
                             '–í—Å–µ, –≥–æ—Ç–æ–≤–æ, –º–æ—à–µ–Ω–Ω–∏–∫ –ø–æ–π–º–∞–Ω!\n–ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–π—Ç–∏ –¥–æ–º–æ–π!)',
                             reply_markup=keyboard)

    # ------------------------------------------moderators---------
    # ------------------------------------------users--------------
    else:
        global discr, mosh, money, call_c
        if message.text == '–ü–æ–∏—Å–∫ –º–æ—à–µ–Ω–Ω–∏–∫–∞üîç':
            buttons = [[InlineKeyboardButton('–ü–æ–∏—Å–∫ –º–æ—à–µ–Ω–Ω–∏–∫–∞üîç',switch_inline_query_current_chat = '')]]
            keyboard = InlineKeyboardMarkup(buttons)
            bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É\n'+texts.search_t, reply_markup=keyboard)
        elif message.text == '–î–æ–º–æ–π' or  message.text == '–û—Ç–º–µ–Ω–∞':
            base_w.statistics_plus(message.chat.id)
            discr = mosh = money = call_c =False
            buttons = [['–ü–æ–∏—Å–∫ –º–æ—à–µ–Ω–Ω–∏–∫–∞üîç', '–°–ø–∏—Å–æ–∫ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤üïµ‚Äç‚ôÇüïµ‚Äç‚ôÇüïµ‚Äç‚ôÇ'],
                       ['–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞üïµ‚Äç‚ôÇ', '–ó–∞–∫–∞–∑–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥üí≤'], ['–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏üìû']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, texts.hello_t, reply_markup=keyboard)
        elif message.text == '–°–ø–∏—Å–æ–∫ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤üïµ‚Äç‚ôÇüïµ‚Äç‚ôÇüïµ‚Äç‚ôÇ':
            all_in = base_w.all_info_robbers()
            strim = ''
            for i in range(5):
                try:
                    one = all_in[i]
                    strim += texts.content_one %(one[0], one[2], one[1], one[3]) + '\n\n'
                except:
                    break
            buttons = [[InlineKeyboardButton('‚óºÔ∏è', callback_data='None'),InlineKeyboardButton('     1-5     ', callback_data='None'), InlineKeyboardButton('üîª', callback_data='üîª+2')]]
            keyboard = InlineKeyboardMarkup(buttons)
            bot.send_message(message.chat.id, strim,
                             reply_markup=keyboard)
        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞üïµ‚Äç‚ôÇ':
            buttons = [['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏–∫–∞ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è ID (–µ—Å–ª–∏ –µ—Å—Ç—å)',
                             reply_markup=keyboard)
            buttons = [[InlineKeyboardButton('–ù–µ—Ç —Å–º—Å –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–∞', callback_data='–ù–µ—Ç —Å–º—Å –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–∞')]]
            reply_markup = InlineKeyboardMarkup(buttons)
            bot.send_message(message.chat.id, '–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—Ç–µ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–µ—Ç —Å–º—Å –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–∞"',
                             reply_markup=reply_markup)
            mosh = True

        elif mosh == True:
            mosh = False
            try:
                for i in base_w.ids_admins():
                    try:
                        bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False, message_id=message.message_id)
                    except:
                        pass
                for i in constants.admins:
                    try:
                        bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False, message_id=message.message_id)
                    except:
                        pass
                textw = '–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –≤—Å–µ –≤ –æ–¥–Ω–æ–º —Å–º—Å.  –ù–∞—à –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç, –¥–æ–±–∞–≤–∏—Ç –µ–≥–æ –≤ –±–æ—Ç–∞ –∏ –≤—ã–ª–æ–∂–∏—Ç –Ω–∞ –∫–∞–Ω–∞–ª.'
                bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ(–µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å) —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞.'+ textw)
                discr = True
            except:
                bot.send_message(message.chat.id,
                                 '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö')
                message.text = '–î–æ–º–æ–π'
                answer_questions(bot, update)

        elif discr == True:
            for i in base_w.ids_admins():
                try:
                    bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False,
                                        message_id=message.message_id)
                except:
                    pass
            for i in constants.admins:
                try:
                    bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False,
                                        message_id=message.message_id)
                except:
                    pass
            if message.text != '–û—Ç–ø—Ä–∞–≤–∏—Ç—å‚úÖ':
                buttons = [['–û—Ç–ø—Ä–∞–≤–∏—Ç—å‚úÖ']]
                keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=keyboard)

            elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å‚úÖ':
                discr = False
                bot.send_message(message.chat.id,
                                 '–°–ø–∞—Å–∏–±–æ, –∑–∞ —Ç–æ, —á—Ç–æ –ø–æ–º–æ–≥–ª–∏ –Ω–∞–º. –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º—ã –¥–æ–±–∞–≤–∏–º –º–æ—à–µ–Ω–Ω–∏–∫–∞ –≤ –±–∞–∑—É.')
                message.text = '–î–æ–º–æ–π'
                answer_questions(bot, update)


        elif message.text == '–ó–∞–∫–∞–∑–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥üí≤':
            buttons = [['–î–æ–º–æ–π']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, texts.money, reply_markup=keyboard)
            money = True

        elif money == True:
            money = False
            for i in base_w.ids_admins():
                try:
                    bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False,
                                        message_id=message.message_id)
                except:
                    pass
            for i in constants.admins:
                try:
                    bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False,
                                        message_id=message.message_id)
                except:
                    pass
            bot.send_message(message.chat.id, '–ù–∞—à –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –º—ã –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—Éüëå')

        elif message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏üìû':
            buttons = [['–û—Ç–º–µ–Ω–∞']]
            keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, texts.call_city, reply_markup=keyboard)
            call_c = True

        elif call_c == True:
            call_c = False
            for i in base_w.ids_admins():
                try:
                    bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False,
                                        message_id=message.message_id)
                except:
                    pass
            for i in constants.admins:
                try:
                    bot.forward_message(chat_id=i, from_chat_id=message.chat.id, disable_notification=False,
                                        message_id=message.message_id)
                except:
                    pass
            bot.send_message(message.chat.id, '–Ø –ª–∏—á–Ω–æ –ø–µ—Ä–µ–¥–∞–º —Ç–≤–æ–µ —Å–º—Å –∞–¥–º–∏–Ω—É –∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –æ–Ω —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—èüë•')







def inline_caps(bot, update):
    query = update.inline_query.query
    if not query:
        return
    else:
        results = []

        if '@' not in query:
            nicks = base_w.search_by_name(str(query))
            for i in nicks:
                content = texts.content %(i[2], i[1], i[3], i[5])
                results.append(InlineQueryResultArticle(id=i[2], title=i[2], input_message_content=InputTextMessageContent(content), description=i[2]))
        else:
            nicks = base_w.search_by_un(str(query))
            for i in nicks:
                content = texts.content % (i[2], i[1], i[3], i[5])
                results.append(InlineQueryResultArticle(id=i[2], title=i[2],
                                                        input_message_content=InputTextMessageContent(content),
                                                        description=i[2]))

        try:
            if results != []:
                bot.answer_inline_query(update.inline_query.id, results)
            else:
                results.append(InlineQueryResultArticle(id='None', title='None', input_message_content=InputTextMessageContent('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n/start'), description='–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'))
                bot.answer_inline_query(update.inline_query.id, results)
        except:
            pass



def button_ans(bot, update):
    query = update.callback_query
    if 'üîª' in str(query.data):
        list_is = int(str(query.data).split('+')[1])
        all_in = base_w.all_info_robbers()
        strim = ''
        for i in range(5):
            try:
                one = all_in[i + (5 * (list_is-1))]
                strim += texts.content_one % (one[0], one[2], one[1], one[3]) + '\n\n'
            except:
                break

        if strim != '':
            buttons = [[InlineKeyboardButton('üî∫', callback_data='üî∫+' + str(list_is-1)),
                        InlineKeyboardButton('     %s-%s     ' % (str((list_is * 5 - 4)), str((list_is) * 5)),
                                             callback_data='None'),
                        InlineKeyboardButton('üîª', callback_data='üîª+' + str(list_is + 1))]]
            keyboard = InlineKeyboardMarkup(buttons)
            bot.edit_message_text(message_id=query.message.message_id, chat_id=query.message.chat.id, text=strim,
                                  reply_markup=keyboard)
        else:
            buttons = [[InlineKeyboardButton('üî∫', callback_data='üî∫+' + str(list_is - 1))]]
            keyboard = InlineKeyboardMarkup(buttons)
            strim = '–ë–æ–ª—å—à–µ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç'
            bot.edit_message_text(message_id=query.message.message_id, chat_id=query.message.chat.id, text=strim,
                                  reply_markup=keyboard)


    elif 'üî∫' in str(query.data):
        list_is = int(str(query.data).split('+')[1])
        if list_is != 1:
            all_in = base_w.all_info_robbers()
            strim = ''
            for i in range(5):
                try:
                    one = all_in[i + 5 * (list_is-1)]
                    strim += texts.content_one % (one[0], one[2], one[1], one[3]) + '\n\n'
                except:
                    break

            if strim != '':
                buttons = [[InlineKeyboardButton('üî∫', callback_data='üî∫+' + str(list_is-1)),
                            InlineKeyboardButton('     %s-%s     ' % (str(((list_is-1) * 5) + 1), str((list_is) * 5)),
                                                 callback_data='None'),
                            InlineKeyboardButton('üîª', callback_data='üîª+' + str(list_is + 1))]]
                keyboard = InlineKeyboardMarkup(buttons)
                bot.edit_message_text(message_id=query.message.message_id, chat_id=query.message.chat.id, text=strim,
                                      reply_markup=keyboard)
            else:
                buttons = [[InlineKeyboardButton('üî∫', callback_data='üî∫+' + str(list_is - 1))]]
                keyboard = InlineKeyboardMarkup(buttons)
                strim = '–ë–æ–ª—å—à–µ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç'
                bot.edit_message_text(message_id=query.message.message_id, chat_id=query.message.chat.id, text=strim,
                                      reply_markup=keyboard)
        else:
            all_in = base_w.all_info_robbers()
            strim = ''
            for i in range(5):
                try:
                    one = all_in[i]
                    strim += texts.content_one % (one[0], one[2], one[1], one[3]) + '\n\n'
                except:
                    break
            buttons = [[InlineKeyboardButton('‚óºÔ∏è', callback_data='None'),
                        InlineKeyboardButton('     1-5     ', callback_data='None'),
                        InlineKeyboardButton('üîª', callback_data='üîª+2')]]
            keyboard = InlineKeyboardMarkup(buttons)
            bot.edit_message_text(message_id=query.message.message_id, chat_id=query.message.chat.id, text=strim,
                                  reply_markup=keyboard)

    elif str(query.data) == '–ù–µ—Ç —Å–º—Å –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–∞':
        global mosh,discr
        mosh = False

        textw = '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞, –ø—Ä–∏—à–ª–∏ –µ–≥–æ –∏–º—è, —é–∑–µ—Ä–Ω–µ–π–º (–µ—Å–ª–∏ –µ—Å—Ç—å), –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä—É—Ñ—ã –≤ –≤–∏–¥–µ —Ñ–æ—Ç–æ. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –≤—Å–µ –≤ –æ–¥–Ω–æ–º —Å–º—Å.  –ù–∞—à –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç, –¥–æ–±–∞–≤–∏—Ç –µ–≥–æ –≤ –±–æ—Ç–∞ –∏ –≤—ã–ª–æ–∂–∏—Ç –Ω–∞ –∫–∞–Ω–∞–ª.'
        bot.send_message(query.message.chat.id, textw)
        discr = True


def daily_job(bot, update, job_queue):
    t = datetime.time(00,00,00,00)
    job_queue.run_daily(base_w.clear_stat(),t,days=tuple(range(6)))

updater.dispatcher.add_handler(CommandHandler('clearstat', daily_job, pass_job_queue=True))
inline_caps_handler = InlineQueryHandler(inline_caps)
dispatcher.add_handler(inline_caps_handler)
start_handler = CommandHandler('start', start)
answer_handler = MessageHandler(Filters.all, answer_questions)
updater.dispatcher.add_handler(CallbackQueryHandler(button_ans))
dispatcher.add_handler(start_handler)
dispatcher.add_handler(answer_handler)
updater.start_polling(timeout=5, clean=True)